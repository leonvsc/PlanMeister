@page "/appointmentdetails"
@using System.Web
@using PlanMeisterWeb.Models
@using PlanMeisterWeb.Service
@inject NavigationManager NavigationManager
@inject AppointmentService AppointmentService
@inject EmployeeService EmployeeService


<PageTitle>Appointment details</PageTitle>

@if (Appointment != null)
{
    <div class="container">
      <div class="card">
        <div class="card-body">
          <h5 class="card-title">@Appointment.Title</h5>
          <p class="card-text">@Appointment.Description</p>
          <p class="card-text"><strong>Employee:</strong> @Employee.Name</p>
          <p class="card-text"><strong>Start:</strong> @Appointment.StartDateTime.ToString("dd-MM-yyyy HH:mm")</p>
          <p class="card-text"><strong>End:</strong> @Appointment.EndDateTime.ToString("dd-MM-yyyy HH:mm")</p>
          <p class="card-text"><strong>Type:</strong> @Appointment.Type</p>
        </div>
      </div>
    </div>
}
else
{
    <p>Loading appointment...</p>
}

@code
{
    [Parameter]
    public string? AppointmentId { get; set; }

    private Appointment? Appointment { get; set; }
    private Employee Employee { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavigationManager.Uri);
        var queryParam = HttpUtility.ParseQueryString(uri.Query);
        AppointmentId = queryParam["appointmentid"];

        Appointment = await AppointmentService.GetAppointmentById(AppointmentId);
        Employee = await EmployeeService.GetEmployeeById(Appointment.EmployeeId);
    }
}
