// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanMeisterApi.Models;

#nullable disable

namespace PlanMeisterApi.Migrations
{
    [DbContext(typeof(PlanMeisterDbContext))]
    [Migration("20230411120411_AddEntities")]
    partial class AddEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlanMeisterApi.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<bool>("Billable")
                        .HasColumnType("bit");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DayId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppointmentId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentId = 1,
                            Billable = true,
                            Date = "01-04-2023",
                            DayId = 0,
                            Description = "Ziggo Playout Ochtenddienst",
                            EmployeeId = 0,
                            Name = "Ziggo Playout",
                            Task = "Ziggo Playout",
                            Time = "07:45",
                            Type = "Ziggo Playout"
                        },
                        new
                        {
                            AppointmentId = 2,
                            Billable = true,
                            Date = "01-04-2023",
                            DayId = 0,
                            Description = "Ziggo Playout Avonddienst",
                            EmployeeId = 0,
                            Name = "Ziggo Playout",
                            Task = "Ziggo Playout",
                            Time = "15:45",
                            Type = "Ziggo Playout"
                        },
                        new
                        {
                            AppointmentId = 3,
                            Billable = true,
                            Date = "01-04-2023",
                            DayId = 0,
                            Description = "Ziggo Playout Nachtdienst",
                            EmployeeId = 0,
                            Name = "Ziggo Playout",
                            Task = "Ziggo Playout",
                            Time = "23:45",
                            Type = "Ziggo Playout"
                        });
                });

            modelBuilder.Entity("PlanMeisterApi.Models.Day", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DayId"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DayId");

                    b.ToTable("Days");

                    b.HasData(
                        new
                        {
                            DayId = 1,
                            AppointmentId = 1,
                            Name = "Maandag"
                        },
                        new
                        {
                            DayId = 2,
                            AppointmentId = 2,
                            Name = "Dinsdag"
                        },
                        new
                        {
                            DayId = 3,
                            AppointmentId = 3,
                            Name = "Woensdag"
                        });
                });

            modelBuilder.Entity("PlanMeisterApi.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Name = "Hans"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Name = "Klaas"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Name = "Piet"
                        });
                });

            modelBuilder.Entity("PlanMeisterApi.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<string>("DateFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateTill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RequestType")
                        .HasColumnType("int");

                    b.Property<string>("TimeFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeTill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestId");

                    b.ToTable("Requests");

                    b.HasData(
                        new
                        {
                            RequestId = 1,
                            DateFrom = "01-04-2023",
                            DateTill = "10-04-2023",
                            EmployeeId = 1,
                            RequestType = 0,
                            TimeFrom = "00:00",
                            TimeTill = "23:59"
                        },
                        new
                        {
                            RequestId = 2,
                            DateFrom = "01-04-2023",
                            DateTill = "10-04-2023",
                            EmployeeId = 2,
                            RequestType = 0,
                            TimeFrom = "00:00",
                            TimeTill = "23:59"
                        },
                        new
                        {
                            RequestId = 3,
                            DateFrom = "01-04-2023",
                            DateTill = "10-04-2023",
                            EmployeeId = 3,
                            RequestType = 0,
                            TimeFrom = "00:00",
                            TimeTill = "23:59"
                        });
                });

            modelBuilder.Entity("PlanMeisterApi.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("DayId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            ScheduleId = 1,
                            DayId = 1
                        },
                        new
                        {
                            ScheduleId = 2,
                            DayId = 2
                        },
                        new
                        {
                            ScheduleId = 3,
                            DayId = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
