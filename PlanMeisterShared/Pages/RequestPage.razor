@page "/request"
@using PlanMeisterShared.Models
@using PlanMeisterShared.Service
@inject RequestService RequestService
@inject EmployeeService EmployeeService

<PageTitle>Request</PageTitle>

<h1>Request</h1>

<Modal @ref="modalRefAppointment">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Add Appointment</ModalTitle>
            <CloseButton/>
        </ModalHeader>
        <ModalBody>
            <AddAppointment></AddAppointment>
        </ModalBody>
    </ModalContent>
</Modal>

<Modal @ref="modalRefRequest">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Add Request</ModalTitle>
            <CloseButton/>
        </ModalHeader>
        <ModalBody>
            <AddRequest></AddRequest>
        </ModalBody>
    </ModalContent>
</Modal>

<Modal @ref="modalRefEditRequest">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Edit Request</ModalTitle>
            <CloseButton/>
        </ModalHeader>
        <ModalBody>
            <EditRequest RequestId="@selectedRequestId"></EditRequest>
        </ModalBody>
    </ModalContent>
</Modal>

<button class="btn btn-primary" @onclick="() => ShowAppointmentModal()">Add Appointment</button>
<button class="btn btn-primary" @onclick="() => ShowRequestModal()">Add Request</button>

@if (Requests == null)
{
    <h3>Requests are loading</h3>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Employee</th>
            <th>Request Type</th>
            <th>Date From</th>
            <th>Date Till</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var request in Requests)
        {
            <tr>
                <td>@request.EmployeeName</td>
                <td>@request.RequestType</td>
                <td>@request.DateTimeFrom</td>
                <td>@request.DateTimeTill</td>
                <td>@request.RequestStatus</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => EditRequest(request.RequestId)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => DeleteRequest(request)">Delete</button>
                    <button class="btn btn-success" @onclick="() => MarkRequestAsCompleted(request)">Mark as Completed</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code
{
    private IEnumerable<Request> Requests { get; set; }
    private Employee Employee { get; set; }
    private int selectedRequestId;
    
    private Modal modalRefAppointment;
    private Modal modalRefRequest;
    private Modal modalRefEditRequest;

    protected override async Task OnInitializedAsync()
    {
        Requests = await RequestService.GetRequests();

        foreach ( var request in Requests)
        {
            request.EmployeeName = await GetEmployeeName(request.EmployeeId);
        }
    }

    private void EditRequest(int requestId)
    {
        selectedRequestId = requestId;
        ShowEditRequestModal();
    }

    private void DeleteRequest(Request request)
    {
        
    }

    private void MarkRequestAsCompleted(Request request)
    {
        
    }

    private async Task<string> GetEmployeeName(int employeeId)
    {
        Employee = await EmployeeService.GetEmployeeById(employeeId);
        return Employee.Name;
    }
    
    private Task ShowAppointmentModal()
    {
        return modalRefAppointment.Show();
    }
    
    private Task ShowRequestModal()
    {
        return modalRefRequest.Show();
    }
    
    private Task ShowEditRequestModal()
    {
        return modalRefEditRequest.Show();
    }
}
